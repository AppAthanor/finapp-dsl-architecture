app LoanTopupApp {
    name: "Loan Top-up"
    id: "com.banking.loantopup"
    version: "1.0.0"
    platforms: [ios, android, web]
    theme: {
        primaryColor: "#2E5BFF"
        secondaryColor: "#00C48C"
        backgroundColor: "#F7F9FC"
        errorColor: "#FF647C"
        textColor: "#1A2138"
    }
    regions: [
        { 
            id: "UK"
            displayName: "United Kingdom" 
            locale: "en-GB"
            currency: "GBP"
            currencySymbol: "Â£"
            dateFormat: "DD/MM/YYYY"
            regulatoryBody: "FCA"
        },
        { 
            id: "HK"
            displayName: "Hong Kong" 
            locale: ["en-HK", "zh-HK"]
            currency: "HKD"
            currencySymbol: "HK$"
            dateFormat: "DD/MM/YYYY"
            regulatoryBody: "HKMA"
        }
    ]
    customerSegments: [
        {
            id: "Basic"
            interestRates: {
                "UK": "6.9% APR",
                "HK": "7.2% APR"
            }
            maxTopupAmounts: {
                "UK": 25000,
                "HK": 200000
            }
            minTopupAmounts: {
                "UK": 1000,
                "HK": 10000
            }
            benefits: {
                "UK": "No early repayment charges",
                "HK": "Standard repayment flexibility"
            }
        },
        {
            id: "Wealth"
            interestRates: {
                "UK": "5.4% APR",
                "HK": "5.8% APR"
            }
            maxTopupAmounts: {
                "UK": 100000,
                "HK": 800000
            }
            minTopupAmounts: {
                "UK": 5000,
                "HK": 50000
            }
            benefits: {
                "UK": "Premier rate guarantee and priority service",
                "HK": "Jade member priority processing and rate discount"
            }
        }
    ]
}

// Error definitions
errors {
  // System-defined error categories
  category NetworkError {
    codes: [408, 502, 503, 504]
    severity: high
    retryable: true
  }
  
  category ValidationError {
    codes: [400, 422]
    severity: medium
    retryable: false
  }
  
  category AuthenticationError {
    codes: [401]
    severity: high
    retryable: false
  }
  
  category AuthorisationError {
    codes: [403]
    severity: high
    retryable: false
  }
  
  // Loan-specific error definitions
  error IneligibleLoan extends ValidationError {
    code: "LOAN_001"
    message: "Your loan is not eligible for a top-up at this time"
  }
  
  error InsufficientIncome extends ValidationError {
    code: "LOAN_002"
    message: "Your income does not meet the minimum requirement for this top-up"
  }
  
  error AmountTooLow extends ValidationError {
    code: "LOAN_003"
    message: "The requested amount is below the minimum allowed"
  }
  
  error AmountTooHigh extends ValidationError {
    code: "LOAN_004"
    message: "The requested amount exceeds your maximum eligible amount"
  }
  
  error LoanOfferExpired extends ValidationError {
    code: "LOAN_005"
    message: "Your loan top-up offer has expired"
  }
  
  error AccountTooNew extends ValidationError {
    code: "LOAN_006"
    message: "Your account is too new for a loan top-up"
  }
}

// Component definitions for error handling
components {
  // Error components
  component ErrorBanner {
    type: "banner"
    properties: {
      message: string
      actionText: string?
      action: action?
      variant: "error" | "warning" = "error"
    }
  }
  
  component ModalDialog {
    type: "modal"
    properties: {
      title: string
      message: string
      primaryAction: string
      secondaryAction: string?
      onPrimary: action
      onSecondary: action?
    }
  }
  
  component RetryDialog {
    type: "modal"
    properties: {
      title: string
      message: string
      retryAction: string
      cancelAction: string
      onRetry: action
      onCancel: action
    }
  }
  
  component SecurityDialog {
    type: "modal"
    properties: {
      message: string
      action: string
      onAction: action
    }
  }
}

// Models for loan top-up feature
model Loan {
    id: string required
    customerId: string required
    originalAmount: number required
    currentBalance: number required
    monthlyPayment: number required
    remainingTerm: number required
    interestRate: number required
    isEligibleForTopup: boolean required
    startDate: date required
    currency: string required
    region: string required
    status: string required
    lastPaymentDate: date
    nextPaymentDate: date required
}

model TopupOffer {
    loanId: string required
    maxTopupAmount: number required
    minTopupAmount: number required
    interestRate: number required
    isPreApproved: boolean required
    expiryDate: date required
    customerSegment: string required
    specialPromotionId: string
}

model TopupAmount {
    amount: number required
    newTotalLoan: number required
    newMonthlyPayment: number required
    remainingTerm: number required
    totalInterestPayable: number required
    totalRepayable: number required
    effectiveDate: date required
}

model TopupConfirmation {
    topupId: string required
    amount: number required
    reference: string required
    status: string required
    processingDate: date required
    disbursementDate: date required
    firstNewPaymentDate: date required
    benefitApplied: string
}

model PromotionalBanner {
    id: string required
    title: string required
    description: string required
    startDate: date required
    endDate: date required
    imageUrl: string
    actionText: string
    actionLink: string
    region: string required
    customerSegment: string
    timeOfDay: string
    specialOffer: string
}

validation LoanEligibility {
    on: Loan
    rule: "isEligibleForTopup && status === 'active'"
    message: "Loan must be active and eligible for top-up"
}

validation TopupAmount {
    on: TopupAmount
    rule: "amount >= minTopupAmount && amount <= maxTopupAmount"
    message: "Top-up amount must be within the allowed limits"
}

// API definitions with error mapping
api LoanTopupService {
  endpoint: "/api/loan-topup"
  
  operation checkEligibility {
    method: GET
    request: {
      loanId: string
      customerId: string
    }
    response: {
      eligible: boolean
      maxAmount: number?
      reason: string?
    }
    
    errorMapping {
      400: {
        "LOAN_NOT_ELIGIBLE" -> IneligibleLoan
        "INCOME_BELOW_THRESHOLD" -> InsufficientIncome
        "ACCOUNT_TOO_NEW" -> AccountTooNew
      }
      401: AuthenticationError
      403: AuthorisationError
      5xx: NetworkError
    }
  }
  
  operation createTopup {
    method: POST
    request: {
      loanId: string
      customerId: string
      amount: number
      term: number?
    }
    response: {
      topupId: string
      status: string
      processingDate: date
      disbursementDate: date
    }
    
    errorMapping {
      400: {
        "AMOUNT_TOO_LOW" -> AmountTooLow
        "AMOUNT_TOO_HIGH" -> AmountTooHigh
        "LOAN_OFFER_EXPIRED" -> LoanOfferExpired
      }
      401: AuthenticationError
      403: AuthorisationError
      5xx: NetworkError
    }
  }
}

// Journey definition with error hub
journey LoanTopupJourney {
  screens: [
    LoansOverview,
    TopupOfferScreen,
    AmountSelectionScreen,
    TermsScreen,
    ConfirmationScreen,
    SuccessScreen
  ]
  
  initialScreen: LoansOverview
  
  // Centralised Error Hub
  errorHub {
    // Define which errors this journey owns vs delegates to platform
    ownership {
      owns: [IneligibleLoan, InsufficientIncome, AmountTooLow, AmountTooHigh, LoanOfferExpired, AccountTooNew]
      delegates: [NetworkError, AuthenticationError, AuthorisationError]
    }
    
    // Define handlers for owned errors
    handlers {
      IneligibleLoan: {
        display: ErrorBanner
        location: "LoansOverview"
        properties: {
          message: error.message
          actionText: "View loan details"
          action: navigate(LoanDetailsScreen)
        }
        recovery: {
          allowRetry: false
        }
      }
      
      InsufficientIncome: {
        display: ModalDialog
        location: "TopupOfferScreen"
        properties: {
          title: "Income requirement not met"
          message: "Based on our records, your income doesn't meet the minimum requirement for this loan top-up. Please update your income details or try again later."
          primaryAction: "Update income details"
          secondaryAction: "Go back"
        }
        recovery: {
          allowRetry: false
          alternativeFlow: navigate(IncomeUpdateScreen)
        }
      }
      
      AmountTooLow: {
        display: ErrorBanner
        location: "AmountSelectionScreen"
        properties: {
          message: error.message
        }
        recovery: {
          allowRetry: true
          focusField: "amountField"
        }
      }
      
      AmountTooHigh: {
        display: ErrorBanner
        location: "AmountSelectionScreen"
        properties: {
          message: error.message
        }
        recovery: {
          allowRetry: true
          focusField: "amountField"
        }
      }
      
      LoanOfferExpired: {
        display: ModalDialog
        location: "ConfirmationScreen"
        properties: {
          title: "Offer expired"
          message: "Your loan top-up offer has expired. Please start a new application."
          primaryAction: "Start new application"
          secondaryAction: "Go to loans overview"
        }
        recovery: {
          primaryFlow: navigate(LoansOverview)
          secondaryFlow: navigate(LoansOverview)
        }
      }
      
      AccountTooNew: {
        display: ErrorBanner
        location: "TopupOfferScreen"
        properties: {
          message: error.message
        }
        recovery: {
          allowRetry: false
        }
      }
    }
  }
}

// Platform-level default error handlers
platform {
  errorHub {
    defaultHandlers {
      NetworkError: {
        display: RetryDialog
        properties: {
          title: "Connection issue"
          message: "We're having trouble connecting to our services. Please try again."
          retryAction: "Retry"
          cancelAction: "Cancel"
        }
        recovery: {
          retryStrategy: exponentialBackoff(3, 1000)
          cancelFlow: navigateBack()
        }
      }
      
      AuthenticationError: {
        display: SecurityDialog
        properties: {
          message: "Your session has expired. Please log in again to continue."
          action: "Log in"
        }
        recovery: {
          preserveState: true
          flow: navigate(LoginScreen)
        }
      }
      
      AuthorisationError: {
        display: ModalDialog
        properties: {
          title: "Access denied"
          message: "You don't have permission to perform this action."
          primaryAction: "Go to home"
          secondaryAction: "Go back"
        }
        recovery: {
          primaryFlow: navigate(HomeScreen)
          secondaryFlow: navigateBack()
        }
      }
    }
  }
}

// Screens for loan top-up journey
screen LoansOverview {
    title: "My Loans"
    initial

    dataFunctions: [
        {
            name: "formatCurrency"
            params: ["value", "region"]
            expression: "region === 'UK' ? `Â£${value.toFixed(2)}` : `HK$${value.toFixed(2)}`"
        },
        {
            name: "formatDate"
            params: ["dateValue", "region"]
            expression: "new Intl.DateTimeFormat(region === 'UK' ? 'en-GB' : 'en-HK', { dateStyle: 'medium' }).format(new Date(dateValue))"
        },
        {
            name: "getTimeBasedOffer"
            params: []
            expression: "const hour = new Date().getHours(); return hour < 6 ? 'Night Owl Banking Benefits' : (hour >= 19 ? 'Evening Banking Benefits' : null);"
        },
        {
            name: "getSeasonalOffer"
            params: ["region"]
            expression: `
                const month = new Date().getMonth();
                const date = new Date().getDate();
                if (region === 'UK') {
                    if (month === 2) return 'Spring Home Improvement Promotion';
                    if (month === 4) return 'Summer Holiday Financing Options';
                    if (month === 11 && date === 24) return 'Festive payment holiday option';
                } else if (region === 'HK') {
                    if (month === 0 && date === 25) return 'Lunar New Year Special Offers';
                }
                return null;
            `
        }
    ]

    layout: {
        type: stack
        components: [
            {
                type: header
                title: "My Loans"
            },
            {
                type: conditional
                condition: "getTimeBasedOffer() !== null"
                components: [
                    {
                        type: banner
                        title: "{{getTimeBasedOffer()}}"
                        properties: {
                            style: "promotional",
                            dismissable: true
                        }
                    }
                ]
            },
            {
                type: conditional
                condition: "getSeasonalOffer(userProfile.region) !== null"
                components: [
                    {
                        type: banner
                        title: "{{getSeasonalOffer(userProfile.region)}}"
                        properties: {
                            style: "promotional",
                            dismissable: true
                        }
                    }
                ]
            },
            {
                type: list
                data: "loans"
                itemComponent: {
                    type: card
                    components: [
                        {
                            type: stack
                            properties: {
                                direction: "horizontal",
                                alignment: "space-between"
                            }
                            components: [
                                {
                                    type: text
                                    value: "Loan #{{item.id}}"
                                    properties: {
                                        style: "heading"
                                    }
                                },
                                {
                                    type: conditional
                                    condition: "item.isEligibleForTopup"
                                    components: [
                                        {
                                            type: badge
                                            text: "Top-up Available"
                                            properties: {
                                                style: "highlight"
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            type: stack
                            components: [
                                {
                                    type: fieldDisplay
                                    label: "Current Balance"
                                    value: "{{formatCurrency(item.currentBalance, item.region)}}"
                                },
                                {
                                    type: fieldDisplay
                                    label: "Monthly Payment"
                                    value: "{{formatCurrency(item.monthlyPayment, item.region)}}"
                                },
                                {
                                    type: fieldDisplay
                                    label: "Next Payment Date"
                                    value: "{{formatDate(item.nextPaymentDate, item.region)}}"
                                }
                            ]
                        },
                        {
                            type: conditional
                            condition: "item.isEligibleForTopup"
                            components: [
                                {
                                    type: button
                                    text: "View Top-up Offer"
                                    properties: {
                                        style: "primary"
                                    }
                                    actions: {
                                        onTap: {
                                            navigate: TopupOffer
                                            params: {
                                                loanId: "{{item.id}}"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            }
        ]
    }

    onLoad: {
        apiCall: getLoans
    }
}

screen TopupOfferScreen {
    title: "Loan Top-up Offer"
    
    layout: {
        type: stack
        spacing: 16
        components: [
            {
                type: card
                title: "Your Loan Top-up Offer"
                content: {
                    type: stack
                    components: [
                        {
                            type: text
                            text: "Based on your loan history, we can offer you a loan top-up:"
                            style: "body"
                        },
                        {
                            type: infoBox
                            items: [
                                {
                                    label: "Maximum top-up amount"
                                    value: "bind:formatCurrency(offer.maxTopupAmount, userRegion)"
                                },
                                {
                                    label: "Interest rate"
                                    value: "bind:offer.interestRate"
                                },
                                {
                                    label: "Customer segment"
                                    value: "bind:offer.customerSegment"
                                },
                                {
                                    label: "Offer valid until"
                                    value: "bind:formatDate(offer.expiryDate, userRegion)"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                type: button
                label: "Apply for Top-up"
                variant: "primary"
                action: navigate(AmountSelectionScreen)
            },
            {
                type: button
                label: "Not now"
                variant: "secondary"
                action: navigate(LoansOverview)
            }
        ]
    }
}

screen AmountSelectionScreen {
    title: "Select Top-up Amount"
    
    layout: {
        type: stack
        spacing: 16
        components: [
            {
                type: "card"
                title: "How much would you like?"
                content: {
                    type: "stack"
                    components: [
                        {
                            type: "text"
                            text: "Please enter the amount you would like to top-up your loan by:"
                            style: "body"
                        },
                        {
                            type: "sliderInput"
                            id: "amountField"
                            label: "Top-up amount"
                            min: "bind:offer.minTopupAmount"
                            max: "bind:offer.maxTopupAmount"
                            step: 100
                            initialValue: "bind:suggestedAmount"
                            currencySymbol: "bind:offer.currencySymbol"
                        }
                    ]
                }
            },
            {
                type: "infoPanel"
                title: "Your new loan details"
                items: [
                    {
                        label: "Original loan amount"
                        value: "bind:formatCurrency(currentLoanAmount, userRegion)"
                    },
                    {
                        label: "Top-up amount"
                        value: "bind:formatCurrency(selectedAmount, userRegion)"
                    },
                    {
                        label: "New total loan"
                        value: "bind:formatCurrency(currentLoanAmount + selectedAmount, userRegion)"
                    }
                ]
            },
            {
                type: "button"
                label: "Continue"
                variant: "primary"
                action: navigate(TermsScreen)
            },
            {
                type: "button"
                label: "Back"
                variant: "secondary"
                action: navigateBack()
            }
        ]
    }
}

screen TermsScreen {
    title: "Terms & Conditions"
    
    layout: {
        type: stack
        spacing: 16
        components: [
            {
                type: "card"
                title: "Loan Terms"
                content: {
                    type: "stack"
                    components: [
                        {
                            type: "infoBox"
                            items: [
                                {
                                    label: "Top-up amount"
                                    value: "bind:formatCurrency(selectedAmount, userRegion)"
                                },
                                {
                                    label: "New total loan"
                                    value: "bind:formatCurrency(newTotalLoan, userRegion)"
                                },
                                {
                                    label: "Remaining term"
                                    value: "bind:remainingTerm + ' months'"
                                },
                                {
                                    label: "New monthly payment"
                                    value: "bind:formatCurrency(newMonthlyPayment, userRegion)"
                                },
                                {
                                    label: "Total repayable"
                                    value: "bind:formatCurrency(totalRepayable, userRegion)"
                                },
                                {
                                    label: "APR"
                                    value: "bind:effectiveAPR + '%'"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                type: "documentViewer"
                title: "Terms & Conditions"
                documentUrl: "bind:termsDocumentUrl"
                height: 300
            },
            {
                type: "checkbox"
                id: "termsCheckbox"
                label: "I have read and agree to the terms and conditions"
                required: true
            },
            {
                type: "button"
                label: "Continue"
                variant: "primary"
                action: navigate(ConfirmationScreen)
                disabled: "!termsCheckbox"
            },
            {
                type: "button"
                label: "Back"
                variant: "secondary"
                action: navigateBack()
            }
        ]
    }
}

screen ConfirmationScreen {
    title: "Confirm Top-up"
    
    layout: {
        type: stack
        spacing: 16
        components: [
            {
                type: "card"
                title: "Confirm your loan top-up"
                content: {
                    type: "stack"
                    components: [
                        {
                            type: "text"
                            text: "Please review the details of your loan top-up application:"
                            style: "body"
                        },
                        {
                            type: "infoBox"
                            items: [
                                {
                                    label: "Top-up amount"
                                    value: "bind:formatCurrency(selectedAmount, userRegion)"
                                },
                                {
                                    label: "New total loan"
                                    value: "bind:formatCurrency(newTotalLoan, userRegion)"
                                },
                                {
                                    label: "New monthly payment"
                                    value: "bind:formatCurrency(newMonthlyPayment, userRegion)"
                                },
                                {
                                    label: "First new payment date"
                                    value: "bind:formatDate(firstNewPaymentDate, userRegion)"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                type: "note"
                title: "Important"
                text: "By confirming this top-up, you agree to the revised loan terms. The top-up amount will be credited to your linked account."
                style: "warning"
            },
            {
                type: "button"
                label: "Confirm Top-up"
                variant: "primary"
                action: "createTopup" // This will trigger the API call
            },
            {
                type: "button"
                label: "Cancel"
                variant: "secondary"
                action: navigate(LoansOverview)
            }
        ]
    }
}

screen SuccessScreen {
    title: "Top-up Approved"
    
    layout: {
        type: stack
        spacing: 16
        components: [
            {
                type: "icon"
                name: "checkCircle"
                color: "#00C48C"
                size: "large"
                alignment: "center"
            },
            {
                type: "text"
                text: "Your loan top-up has been approved!"
                style: "heading1"
                alignment: "center"
            },
            {
                type: "card"
                title: "Top-up Details"
                content: {
                    type: "stack"
                    components: [
                        {
                            type: "infoBox"
                            items: [
                                {
                                    label: "Top-up amount"
                                    value: "bind:formatCurrency(confirmation.amount, userRegion)"
                                },
                                {
                                    label: "Reference"
                                    value: "bind:confirmation.reference"
                                },
                                {
                                    label: "Funds available by"
                                    value: "bind:formatDate(confirmation.disbursementDate, userRegion)"
                                },
                                {
                                    label: "First new payment date"
                                    value: "bind:formatDate(confirmation.firstNewPaymentDate, userRegion)"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                type: "button"
                label: "Done"
                variant: "primary"
                action: navigate(LoansOverview)
            },
            {
                type: "button"
                label: "View loan details"
                variant: "secondary"
                action: navigate(LoanDetailsScreen)
            }
        ]
    }
}

// App navigation
navigation: {
    type: stack
    items: [
        {
            title: "Loans"
            screen: LoansOverview
        }
    ]
}

// API configuration
api: {
    baseUrl: "https://api.bankingservices.example/v1"
    mock
    endpoints: [
        {
            id: getLoans
            path: "/loans"
            method: GET
            response: Loan[]
        },
        {
            id: getLoan
            path: "/loans/{loanId}"
            method: GET
            params: [
                {
                    name: loanId
                    type: string
                    required
                }
            ]
            response: Loan
        },
        {
            id: getTopupOffer
            path: "/loans/{loanId}/topup-offer"
            method: GET
            params: [
                {
                    name: loanId
                    type: string
                    required
                }
            ]
            response: TopupOffer
        },
        {
            id: createTopup
            path: "/loans/topup"
            method: POST
            body: {
                loanId: string required,
                amount: number required,
                interestRate: number required
            }
            response: TopupConfirmation
        },
        {
            id: getTopupConfirmation
            path: "/loans/topup/{id}"
            method: GET
            params: [
                {
                    name: id
                    type: string
                    required
                }
            ]
            response: TopupConfirmation
        }
    ]
}

// Mock data for development
mockData: {
    loans: [
        {
            id: "loan1",
            customerId: "cust1",
            originalAmount: 15000,
            currentBalance: 10000,
            monthlyPayment: 300,
            remainingTerm: 36,
            interestRate: 5.9,
            isEligibleForTopup: true,
            startDate: "2023-01-15",
            currency: "GBP",
            region: "UK",
            status: "active",
            lastPaymentDate: "2023-03-15",
            nextPaymentDate: "2023-04-15"
        },
        {
            id: "loan2",
            customerId: "cust1",
            originalAmount: 5000,
            currentBalance: 4200,
            monthlyPayment: 150,
            remainingTerm: 30,
            interestRate: 6.5,
            isEligibleForTopup: false,
            startDate: "2023-02-10",
            currency: "GBP",
            region: "UK",
            status: "active",
            lastPaymentDate: "2023-03-10",
            nextPaymentDate: "2023-04-10"
        },
        {
            id: "loan3",
            customerId: "cust2",
            originalAmount: 200000,
            currentBalance: 180000,
            monthlyPayment: 5000,
            remainingTerm: 40,
            interestRate: 5.4,
            isEligibleForTopup: true,
            startDate: "2023-01-05",
            currency: "HKD",
            region: "HK",
            status: "active",
            lastPaymentDate: "2023-03-05",
            nextPaymentDate: "2023-04-05"
        }
    ],
    topupOffers: [
        {
            id: "offer1",
            loanId: "loan1",
            maxTopupAmount: 5000,
            minTopupAmount: 1000,
            interestRate: 6.9,
            isPreApproved: true,
            expiryDate: "2023-06-15",
            customerSegment: "Basic"
        },
        {
            id: "offer2",
            loanId: "loan3",
            maxTopupAmount: 100000,
            minTopupAmount: 10000,
            interestRate: 5.8,
            isPreApproved: true,
            expiryDate: "2023-06-05",
            customerSegment: "Wealth",
            specialPromotionId: "promo1"
        }
    ],
    topupConfirmations: [
        {
            topupId: "topup1",
            loanId: "loan1",
            amount: 3000,
            reference: "TOP123456",
            status: "completed",
            processingDate: "2023-03-20",
            disbursementDate: "2023-03-20",
            firstNewPaymentDate: "2023-04-15"
        }
    ],
    promotionalBanners: [
        {
            id: "promo1",
            title: "Spring Home Improvement",
            description: "Top up your loan for home renovations with special rates",
            startDate: "2023-03-01",
            endDate: "2023-05-31",
            imageUrl: "https://example.com/images/spring-promo.jpg",
            actionText: "Learn More",
            region: "UK",
            customerSegment: "Basic"
        },
        {
            id: "promo2",
            title: "Lunar New Year Offer",
            description: "Celebrate with extra funds at reduced rates",
            startDate: "2023-01-20",
            endDate: "2023-02-28",
            imageUrl: "https://example.com/images/lunar-promo.jpg",
            actionText: "Apply Now",
            region: "HK",
            timeOfDay: "any"
        }
    ],
    userProfile: {
        id: "cust1",
        name: "John Smith",
        region: "UK",
        customerSegment: "Basic",
        email: "john.smith@example.com",
        preferredLanguage: "en-GB"
    }
} 